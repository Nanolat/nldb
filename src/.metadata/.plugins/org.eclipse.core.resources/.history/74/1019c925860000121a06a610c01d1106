// llcep_server.cpp : Defines the entry point for the console application.
//

#include "llcep/llcep.h"
#include "string.h"
#include "llcep_lldb_server.h"

#include <stdio.h>

//#define LLCEP_SERVER
#define LLCEP_THREAD_PIPELINE
//#define LLCEP_ORG_PIPELINE_PERF
#define LLCEP_START_REPLICATION_SERVICE_THREAD

extern int pubsub_publisher_main (int argc, char* argv[]) ;
extern int pubsub_subscriber_main (int argc, char *argv[]) ;
extern int repreq_client_main (int argc, char* argv[]) ;
extern int repreq_server_main (int argc, char* argv[]) ;

int main(int argc, char* argv[])
{
	if ( argc != 2) 
	{
		printf("Usage : llcep_server <option>\n");
		printf("        option => lldb-master : run lldb master\n");
		printf("        option => lldb-slave  : run lldb slave\n");
		return -1;
	}

	char * mode = argv[1];
	if (strcmp( mode, "lldb-master") == 0 ) {
		return llcep_lldb_master(argc, argv);
	}

	if (strcmp( mode, "lldb-slave") == 0 ) {
		return llcep_lldb_slave(argc, argv);
	}

	if (strcmp( mode, "rr-client") == 0 ) {
		return repreq_client_main(argc, argv);
	}
	if (strcmp( mode, "rr-server") == 0 ) {
		return repreq_server_main(argc, argv);
	}
	if (strcmp( mode, "ps-pub") == 0 ) {
		return pubsub_publisher_main(argc, argv);
	}
	if (strcmp( mode, "ps-sub") == 0 ) {
		return pubsub_subscriber_main(argc, argv);
	}

	printf("Unsupported mode : %s\n", mode);


	/*
#if defined(LLCEP_START_REPLICATION_SERVICE_THREAD)
	llcep_start_replication_service_thread();
#endif

#if defined(LLCEP_SERVER)
	return llcep_server_main(argc, argv);
#endif

#if defined(LLCEP_THREAD_PIPELINE)
	return llcep_thread_pipeline(argc, argv);
#endif

#if defined(LLCEP_ORG_PIPELINE_PERF)
	return llcep_one_pub_three_pipeline_perf_test(argc, argv);
#endif
	*/
}

